{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.jsx","index.js"],"names":["Form","state","name","number","nameInputId","uuidv4","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","type","pattern","title","required","onChange","id","Component","ContactList","contacts","onDeleteContact","map","onClick","Filter","App","Initialcontacts","filter","addContact","AddedContact","find","contact","alert","deleteContact","contactId","prevState","changeFilter","getFilteredContacts","normalizedFilter","toLowerCase","includes","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dee06e84.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport class Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: ''\r\n};\r\n\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n  handleChange = e => {\r\n      const { name, value } = e.currentTarget;\r\n      this.setState({ [name]: value });\r\n     \r\n  };\r\n\r\n    handleSubmit = e => {\r\n      const { name, number } = this.state;\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(name, number);\r\n \r\n    this.reset();\r\n  };\r\n\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label htmlFor={this.nameInputId}>\r\n          Name\r\n          <input\r\n           type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            id={this.nameInputId}        \r\n          />\r\n            </label>\r\n         <label htmlFor={this.numberInputId}>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n             name=\"number\"\r\n             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n             title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n             required\r\n            value={this.state.number}\r\n             onChange={this.handleChange}\r\n            id={this.numberInputId}\r\n            />   \r\n            </label>\r\n            \r\n  \r\n        <button type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport const ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number}) => (\r\n        <li key={id}>\r\n            {name}: {number}\r\n\r\n          <button\r\n          type=\"button\"\r\n          onClick={() => onDeleteContact(id)}\r\n         >\r\n          Удалить\r\n         </button>\r\n        </li>\r\n    ))}\r\n  </ul>\r\n);","import React from 'react';\r\n\r\nexport const Filter = ({ value, onChange }) => (\r\n  <label>\r\n    Фильтр по имени\r\n    <input type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\n\r\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { Form } from './components/ContactForm/ContactForm';\nimport { ContactList } from './components/ContactList/ContactList';\nimport { Filter } from './components/Filter/Filter';\n\nimport Initialcontacts from './contacts.json';\n\nexport class App extends Component {\n  state = {\n      contacts: Initialcontacts,\n      filter: '',\n};\n\n  addContact = (name, number) => {\n        const AddedContact = {\n            id: uuidv4(),\n            name,\n            number,\n        };\n      (this.state.contacts.find(contact => contact.name === name)\n          ?\n          alert(`${name} is alredy in contacts`)\n            :\n            this.setState(({ contacts }) => ({\n                contacts: [AddedContact, ...contacts],\n            })) \n)};\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n    getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n    };\n\n    render() {\n        const { filter } = this.state;\n        const filteredContacts = this.getFilteredContacts();\n        return (\n            <div>\n                <h2>Phonebook\n                    <Form onSubmit={this.addContact}\n                    />\n                </h2>\n                <Filter value={filter} onChange={this.changeFilter} />\n            <h2> Contacts\n                <ContactList\n                        contacts={filteredContacts}\n                        onDeleteContact={this.deleteContact}\n\n                />\n            </h2>\n           </div>\n       )\n           \n\n    \n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App.jsx\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}