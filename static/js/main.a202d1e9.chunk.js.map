{"version":3,"sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Container/Container.styled.js","components/Container/Container.jsx","components/App/App.styled.js","components/App/App.jsx","index.js"],"names":["ContactForm","styled","form","Label","label","Input","input","Button","button","Form","state","name","number","nameInputId","uuidv4","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","type","pattern","title","required","onChange","id","Component","List","ul","Item","li","ContactList","contacts","onDeleteContact","map","onClick","Filter","MainContainer","div","Container","children","Title","h1","App","Initialcontacts","filter","addContact","AddedContact","find","contact","toLowerCase","alert","deleteContact","contactId","prevState","changeFilter","getFilteredContacts","normalizedFilter","includes","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mkBAEaA,EAAcC,IAAOC,KAAV,6MAWXC,EAAQF,IAAOG,MAAV,+GAQLC,EAAQJ,IAAOK,MAAV,2HAULC,EAASN,IAAOO,OAAV,kH,OC1BNC,EAAb,4MACEC,MAAQ,CACNC,KAAM,GACNC,OAAQ,IAHZ,EAMEC,YAAcC,cANhB,EAOEC,cAAgBD,cAPlB,EASEE,aAAe,SAAAC,GACX,MAAwBA,EAAEC,cAAlBP,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBT,EAAOQ,KAX9B,EAeIE,aAAe,SAAAJ,GACb,MAAyB,EAAKP,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAChBK,EAAEK,iBAEF,EAAKC,MAAMC,SAASb,EAAMC,GAE1B,EAAKa,SArBT,EAyBEA,MAAQ,WACN,EAAKL,SAAS,CAAET,KAAM,GAAIC,OAAQ,MA1BtC,4CA6BE,WACE,OACE,eAACZ,EAAD,CAAawB,SAAUE,KAAKL,aAA5B,UACE,eAAClB,EAAD,CAAOwB,QAASD,KAAKb,YAArB,iBAEE,cAACR,EAAD,CACCuB,KAAK,OACJjB,KAAK,OACLkB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRZ,MAAOO,KAAKhB,MAAMC,KAClBqB,SAAUN,KAAKV,aACfiB,GAAIP,KAAKb,iBAGZ,eAACV,EAAD,CAAOwB,QAASD,KAAKX,cAArB,mBAEC,cAACV,EAAD,CACEuB,KAAK,MACJjB,KAAK,SACLkB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACTZ,MAAOO,KAAKhB,MAAME,OACjBoB,SAAUN,KAAKV,aAChBiB,GAAIP,KAAKX,mBAKb,cAACR,EAAD,CAAQqB,KAAK,SAAb,gCA5DR,GAA0BM,aCHbC,EAAOlC,IAAOmC,GAAV,kOAWJC,EAAOpC,IAAOqC,GAAV,8IAQJ/B,EAASN,IAAOO,OAAV,gECjBN+B,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,gBAAb,OACzB,cAACN,EAAD,UACGK,EAASE,KAAI,gBAAGT,EAAH,EAAGA,GAAItB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACV,eAACyB,EAAD,WACK1B,EADL,KACaC,EAEX,cAAC,EAAD,CACAgB,KAAK,SACLe,QAAS,kBAAMF,EAAgBR,IAF/B,sBAHSA,SCLN9B,EAAQF,IAAOG,MAAV,2QAcLC,EAAQJ,IAAOK,MAAV,iFCZLsC,EAAS,SAAC,GAAD,IAAGzB,EAAH,EAAGA,MAAOa,EAAV,EAAUA,SAAV,OACpB,eAAC,EAAD,mCAEE,cAAC,EAAD,CAAOJ,KAAK,OAAOT,MAAOA,EAAOa,SAAUA,QCLlCa,EAAgB5C,IAAO6C,IAAV,6HCAbC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACvB,cAACH,EAAD,UAAgBG,KCDLC,EAAQhD,IAAOiD,GAAV,iECULC,EAAb,4MACEzC,MAAQ,CACJ8B,SAAUY,EACVC,OAAQ,IAHd,EAMEC,WAAa,SAAC3C,EAAMC,GACd,IAAM2C,EAAe,CACjBtB,GAAInB,cACJH,OACAC,UAEL,EAAKF,MAAM8B,SACPgB,MAAK,SAAAC,GAAO,OAAIA,EAAQ9C,KAAK+C,gBAAkB/C,EAAK+C,iBAErDC,MAAM,GAAD,OAAIhD,EAAJ,2BAEH,EAAKS,UAAS,gBAAGoB,EAAH,EAAGA,SAAH,MAAmB,CAC7BA,SAAS,CAAEe,GAAH,mBAAoBf,SAlB5C,EAsBEoB,cAAgB,SAAAC,GACd,EAAKzC,UAAS,SAAA0C,GAAS,MAAK,CAC1BtB,SAAUsB,EAAUtB,SAASa,QAAO,SAAAI,GAAO,OAAIA,EAAQxB,KAAO4B,UAxBpE,EA4BEE,aAAe,SAAA9C,GACb,EAAKG,SAAS,CAAEiC,OAAQpC,EAAEC,cAAcC,SA7B5C,EAgCI6C,oBAAsB,WACtB,MAA6B,EAAKtD,MAA1B2C,EAAR,EAAQA,OAAQb,EAAhB,EAAgBA,SACVyB,EAAmBZ,EAAOK,cAEhC,OAAOlB,EAASa,QAAO,SAAAI,GAAO,OAC5BA,EAAQ9C,KAAK+C,cAAcQ,SAASD,OArC1C,4CAyCI,WACI,IAAQZ,EAAW3B,KAAKhB,MAAhB2C,OACFc,EAAmBzC,KAAKsC,sBAC9B,OACI,eAAC,EAAD,WACI,eAACf,EAAD,uBACA,cAAC,EAAD,CAAMzB,SAAUE,KAAK4B,gBAGzB,eAACL,EAAD,uBACI,cAAC,EAAD,CAAQ9B,MAAOkC,EAAQrB,SAAUN,KAAKqC,eAEpC,cAAC,EAAD,CACEvB,SAAU2B,EACV1B,gBAAiBf,KAAKkC,0BAvD1C,GAAyB1B,a,MCPzBkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a202d1e9.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const ContactForm = styled.form`\r\ndisplay: block;\r\noutline: 1px solid gray;\r\nmax-width: 550px;\r\npadding: 30px;\r\nmargin-top: 30px;\r\nbox-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\nbackground-color: whitesmoke;\r\n\r\n`;\r\n\r\nexport const Label = styled.label`\r\ndisplay: flex;\r\nflex-direction: column;\r\nmargin-bottom: 30px;\r\nfont-size: 20px;\r\n\r\n`;\r\n\r\nexport const Input = styled.input`\r\ndisplay: blcok;\r\nheight: 25px;\r\nmargin-top: 15px;\r\nmin-width: 300px;\r\nmargin-right: auto;\r\n\r\n\r\n`;\r\n\r\nexport const Button = styled.button`\r\nfont-size: 15px;\r\nborder-radius: 5px;\r\nbox-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n`;","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { ContactForm, Label, Input, Button } from './ContactForm.styled';\r\n\r\nexport class Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: ''\r\n};\r\n\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n  handleChange = e => {\r\n      const { name, value } = e.currentTarget;\r\n      this.setState({ [name]: value });\r\n     \r\n  };\r\n\r\n    handleSubmit = e => {\r\n      const { name, number } = this.state;\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(name, number);\r\n \r\n    this.reset();\r\n  };\r\n\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ContactForm onSubmit={this.handleSubmit}>\r\n        <Label htmlFor={this.nameInputId}>\r\n          Name\r\n          <Input\r\n           type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            id={this.nameInputId}        \r\n          />\r\n            </Label>\r\n         <Label htmlFor={this.numberInputId}>\r\n          Number\r\n          <Input\r\n            type=\"tel\"\r\n             name=\"number\"\r\n             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n             title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n             required\r\n            value={this.state.number}\r\n             onChange={this.handleChange}\r\n            id={this.numberInputId}\r\n            />   \r\n            </Label>\r\n            \r\n  \r\n        <Button type=\"submit\">\r\n          Add contact\r\n        </Button>\r\n      </ContactForm>\r\n    );\r\n  }\r\n}\r\n\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const List = styled.ul`\r\nlist-style: none;\r\noutline: 1px solid gray;\r\npadding: 30px;\r\nmax-width: 550px;\r\nbox-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\nfont-size: 25px;\r\nfont-weight: normal;\r\nbackground-color: whitesmoke;\r\n`;\r\n\r\nexport const Item = styled.li`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: space-between;\r\nmargin-bottom: 10px;\r\nfont-style: italic;\r\n`;\r\n\r\nexport const Button = styled.button`\r\npadding: 5px;\r\nborder-radius: 7px;\r\n`;","import React from 'react';\r\n\r\nimport { List, Item, Button } from './ContactList.styled';\r\n\r\nexport const ContactList = ({ contacts, onDeleteContact }) => (\r\n  <List>\r\n    {contacts.map(({ id, name, number}) => (\r\n        <Item key={id}>\r\n            {name}: {number}\r\n\r\n          <Button\r\n          type=\"button\"\r\n          onClick={() => onDeleteContact(id)}\r\n         >\r\n          Delete\r\n         </Button>\r\n        </Item>\r\n    ))}\r\n  </List>\r\n);","import styled from \"@emotion/styled\";\r\n\r\nexport const Label = styled.label`\r\ndisplay: flex;\r\nflex-direction: column;\r\nmargin-top: 20px;\r\nfont-size: 20px;\r\nmax-width: 550px;\r\nfont-weight: normal;\r\noutline: 1px solid gray;\r\npadding: 30px;\r\nbox-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\nbackground-color: whitesmoke;\r\n`;\r\n\r\n\r\nexport const Input = styled.input`\r\nheight: 25px;\r\nmargin-top: 15px;\r\nmax-width: 250px;\r\n`;\r\n\r\n","import React from 'react';\r\n\r\nimport { Label, Input } from './Filter.styled';\r\n\r\nexport const Filter = ({ value, onChange }) => (\r\n  <Label>\r\n    Find contacts by name\r\n    <Input type=\"text\" value={value} onChange={onChange} />\r\n  </Label>\r\n);\r\n\r\n\r\n","import styled from \"@emotion/styled\";\n\nexport const MainContainer = styled.div`\n  max-width: 1170px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 40px 15px 0 15px;\n`;\n","import { MainContainer } from \"./Container.styled\";\n\nexport const Container = ({ children }) => (\n  <MainContainer>{children}</MainContainer>\n);\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Title = styled.h1`\r\nfont-size: 36px;\r\nfont-weight: 700;\r\n`\r\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Initialcontacts from '../../contacts.json';\n\nimport { Form } from '../ContactForm/ContactForm';\nimport { ContactList } from '../ContactList/ContactList';\nimport { Filter } from '../Filter/Filter';\nimport { Container } from '../Container/Container';\n\nimport { Title } from './App.styled';\n\nexport class App extends Component {\n  state = {\n      contacts: Initialcontacts,\n      filter: '',\n};\n\n  addContact = (name, number) => {\n        const AddedContact = {\n            id: uuidv4(),\n            name,\n            number,\n        };\n      (this.state.contacts\n          .find(contact => contact.name.toLowerCase() === name.toLowerCase())\n          ?\n          alert(`${name} is alredy in contacts`)\n            :\n            this.setState(({ contacts }) => ({\n                contacts: [AddedContact, ...contacts],\n            })) \n)};\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n    getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n    };\n\n    render() {\n        const { filter } = this.state;\n        const filteredContacts = this.getFilteredContacts();\n        return (\n            <Container>\n                <Title>Phonebook\n                <Form onSubmit={this.addContact}\n                    />\n            </Title>\n            <Title> Contacts\n                <Filter value={filter} onChange={this.changeFilter} />\n                \n                  <ContactList\n                    contacts={filteredContacts}\n                    onDeleteContact={this.deleteContact}\n\n                  />\n            </Title>\n           </Container>\n       )\n           \n\n    \n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components/App/App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}